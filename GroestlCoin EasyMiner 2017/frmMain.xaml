<Window x:Class="GroestlCoin_EasyMiner_2017.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GroestlCoin_EasyMiner_2017"
        mc:Ignorable="d" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Icon="/Resources/GRS-logo.ico"
        Title="EasyMiner 2017" Height="602.537" Width="578.333" SizeToContent="Height" MaxHeight="750">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.LightBlue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5,10,5,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="145"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Rectangle Grid.Column="0" Fill="{StaticResource GrsLogo}" HorizontalAlignment="Center" Width="64" Height="64"></Rectangle>
            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" FontSize="40">Groestlcoin Miner</Label>
        </Grid>
        <GroupBox Grid.Row="1">
            <GroupBox.Header>
                <Label Margin="0" Height="25" Foreground="White">Wallet Address + Hardware</Label>
            </GroupBox.Header>
            <StackPanel HorizontalAlignment="Stretch" Height="90px">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="60px"/>
                    </Grid.RowDefinitions>
                    <CheckBox Name="UxCpuTgl" Height="50px" Width="70px" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ToolTip="CPU Mining">
                        <ToggleButton.Content>
                            <Rectangle Fill="{DynamicResource CpuLogo}" Width="48" Height="48"></Rectangle>
                        </ToggleButton.Content>
                    </CheckBox>
                    <CheckBox Name="uxnVidiaRb" Grid.Column="2" Grid.Row="1" Height="50px" Width="70px" ToolTip="nVidia Mining" Checked="UxnVidiaRb_OnChecked">
                        <CheckBox.Content>
                            <Rectangle Fill="{DynamicResource NVidiaLogo}" Width="48" Height="48"></Rectangle>
                        </CheckBox.Content>
                    </CheckBox>
                    <CheckBox Name="uxnAMDRb" Grid.Column="3" Grid.Row="1" Width="70px" Height="50px" ToolTip="AMD Mining" Checked="UxAmdRb_OnChecked">
                        <CheckBox.Content>
                            <Rectangle Fill="{DynamicResource AmdLogo}" Width="48" Height="48"></Rectangle>
                        </CheckBox.Content>
                    </CheckBox>
                    <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Grid.Column="0" Grid.Row="0">Address:</Label>
                        <TextBox Width="280" Name="TxtAddress" Height="25" ></TextBox>
                        <Label>Intensity</Label>
                        <TextBox Width="25" MaxLength="2" Name="UxIntensityTxt" Height="25">19</TextBox>
                        <Image Name="UxIntensityHelp" Source="{StaticResource HelpIcon}" Margin="5,0,0,0"  Width="16" Height="16" MouseEnter="UxIntensityHelp_OnMouseEnter" MouseLeave="UxIntensityHelp_OnMouseLeave"></Image>
                        <Popup x:Name="UxIntensityPopup" Opacity="20" Placement="Right" VerticalOffset="-1" HorizontalOffset="5" Height="Auto" AllowsTransparency="True" Margin="10,0,0,0" PlacementTarget="{Binding ElementName=uxHelpIconImg}" IsOpen="False" MouseEnter="UxIntensityHelp_OnMouseEnter" MouseLeave="UxIntensityHelp_OnMouseLeave">
                            <Border BorderThickness="2" CornerRadius="5" Margin="10,0,0,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0.146446,0.146446" EndPoint="0.853541,0.853541">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#FF33ACC3" Offset="0"/>
                                            <GradientStop Color="#FF367E93" Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.146446,0.146446" EndPoint="0.853541,0.853541">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="#B3E5FC" Offset="0"/>
                                            <GradientStop Color="#B3E5FC" Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="{StaticResource InformationIcon}" Grid.Column="0" Height="19.5" Margin="-2,-2,0,-2" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                    <TextBlock x:Name="UxIntensityPopupText" TextWrapping="Wrap" Grid.Column="1" Height="Auto" Background="Transparent" Foreground="Black" Padding="5,0,5,0"></TextBlock>
                                </Grid>
                            </Border>
                        </Popup>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </GroupBox>
        <Expander x:Name="UxAdvancedSettings" IsExpanded="False" Grid.Row="2"  HorizontalAlignment="Stretch" VerticalAlignment="Top" Expanded="UxAdvancedSettings_OnExpanded">
            <Expander.Header>
                <Label>Advanced</Label>
            </Expander.Header>
            <ScrollViewer HorizontalAlignment="Stretch" MaxHeight="400" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <GroupBox Grid.Row="0" Name="uxMiningPoolGroup">
                        <GroupBox.Header>
                            <Label Margin="0" Height="25" Foreground="White">Mining Pool</Label>
                        </GroupBox.Header>
                        <StackPanel HorizontalAlignment="Stretch">
                            <RadioButton GroupName="Pool" Name="RbUsedwarfPool" IsChecked="True" Checked="PoolRadioOptions">Use DwarfPool (default)</RadioButton>
                            <RadioButton GroupName="Pool" Name="RbCustomPool" Checked="PoolRadioOptions">Custom Pool</RadioButton>
                            <WrapPanel Name="WpCustom1" Visibility="Collapsed">
                                <Label>Address:</Label>
                                <TextBox Height="25" Width="400" Name="TxtPool"></TextBox>
                            </WrapPanel>
                            <WrapPanel Name="WpCustom2" Visibility="Collapsed">
                                <Label>User Name:</Label>
                                <TextBox  Height="25" Width="150" Name="TxtUsername"></TextBox>
                                <Label>Password:</Label>
                                <TextBox  Height="25" Width="150" Name="TxtPassword"></TextBox>
                            </WrapPanel>

                        </StackPanel>
                    </GroupBox>
                    <GroupBox Grid.Row="1" Name="uxDonationsGroup">
                        <GroupBox.Header>
                            <Label Margin="0" Height="25" Foreground="White">Donations</Label>
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <TextBlock>Donate to the GRS Marketing or Development Funds for...</TextBlock>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"></ColumnDefinition>
                                    <ColumnDefinition Width="100"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBox Name="UxDonationMinutesTxt" Height="25" Width="22" MaxLength="2">0</TextBox>
                                <Label Grid.Column="1">minutes/hr</Label>
                                <StackPanel Orientation="Horizontal" Grid.Column="2" Width="280" HorizontalAlignment="Right" VerticalAlignment="Center">
                                    <Label HorizontalAlignment="Right" Content="Development Fund">
                                        <Label.Resources>
                                            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=UxFundSwitchRb, Path=IsChecked}" Value="True">
                                                        <Setter Property="FontWeight" Value="Normal"></Setter>
                                                        <Setter Property="Foreground" Value="Gray"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=UxFundSwitchRb, Path=IsChecked}" Value="False">
                                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                                        <Setter Property="Foreground" Value="Black"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Resources>
                                    </Label>
                                    <ToggleButton HorizontalAlignment="Right" Name="UxFundSwitchRb" Style="{StaticResource AnimatedSwitch}" Margin="10,0,20,0"></ToggleButton>
                                    <Label HorizontalAlignment="Right" Content="Marketing Fund">
                                        <Label.Resources>
                                            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=UxFundSwitchRb, Path=IsChecked}" Value="True">
                                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                                        <Setter Property="Foreground" Value="Black"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding ElementName=UxFundSwitchRb, Path=IsChecked}" Value="False">
                                                        <Setter Property="FontWeight" Value="Normal"></Setter>
                                                        <Setter Property="Foreground" Value="Gray"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Resources>
                                    </Label>
                                </StackPanel>

                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </ScrollViewer>
        </Expander>
        <Expander x:Name="UxLogsExpander" IsExpanded="False" Grid.Row="4"  HorizontalAlignment="Stretch" VerticalAlignment="Top" Expanded="UxLogsExpander_OnExpanded" Visibility="Collapsed">
            <Expander.Header>
                <Label>Logs</Label>
            </Expander.Header>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <GroupBox Grid.Row="0" Name="uxCpuMiningLogGroup" Visibility="Collapsed">
                    <GroupBox.Header>
                        <Label Margin="0" Height="26" Foreground="White">CPU Mining Log</Label>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical">
                        <ScrollViewer Height="80" Name="uxCpuScroller">
                            <TextBlock TextWrapping="Wrap" Name="uxCpuLog"></TextBlock>
                        </ScrollViewer>
                    </StackPanel>
                </GroupBox>
                <GroupBox Grid.Row="1" Name="uxGpuMiningLog" Visibility="Collapsed">
                    <GroupBox.Header>
                        <Label Margin="0" Height="26" Foreground="White">GPU Mining Log</Label>
                    </GroupBox.Header>
                    <StackPanel Orientation="Vertical">
                        <ScrollViewer Height="80" Name="uxGpuScroller">
                            <TextBlock TextWrapping="Wrap" Name="uxGpuLog"></TextBlock>
                        </ScrollViewer>
                    </StackPanel>
                </GroupBox>
            </Grid>
        </Expander>
            <ProgressBar Grid.Row="5" Name="ProgressBar" Margin="10,5,10,5"></ProgressBar>
        <StackPanel Grid.Row="6" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,10,0,0">
            <Button Margin="0,0,10,0" Name="UxGetWalletAddressTxt"  Foreground="White" ToolTip="If you use Electrum-GRS, the application will populate the receiving address for you." Click="UxGetWalletAddressTxt_Click">Get Wallet Address</Button>
            <Button Name="BtnStart" Click="BtnStart_OnClick"  Foreground="White">Start Mining</Button>
        </StackPanel>
    </Grid>
</Window>